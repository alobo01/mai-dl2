# Experiment 8: GTSRB with Penalty-based NLL Loss (6 unknown classes)
# Testing dummy class penalty approach on GTSRB
defaults:
  - dataset: gtsrb_6u
  - model: resnet50_enhanced
  - train: enhanced_base
  - eval: base
  - _self_

dataset:
  name: gtsrb
  path: ./data
  img_size: 32
  num_classes: 37  # 37 known classes
  num_known_classes: 37
  total_original_classes: 43
  known_classes_original_ids: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36]  # 37 known
  unknown_classes_original_ids: [37, 38, 39, 40, 41, 42]  # 6 unknown
  batch_size: 128
  num_workers: 4
  val_split_ratio: 0.2

model:
  type: "enhanced_openset_resnet50"
  d_embed: 512

  backbone:
    name: "resnet50"
    pretrained: True
    frozen: False
    num_output_features: 2048

  neck:
    enabled: True  # With neck for this experiment
    in_features: ${model.backbone.num_output_features}
    out_features: ${model.d_embed}
    use_batchnorm: True
    use_relu: True
    
  cls_head:
    in_features: ${model.d_embed}
    use_weight_norm: True
    label_smoothing: 0.1
    temperature: 1.0

train:
  optimizer:
    name: "AdamW"
    lr: 0.0005  # Lower learning rate for GTSRB
    weight_decay: 0.01

  scheduler:
    name: "CosineAnnealingLR"
    params:
      T_max: 50

  trainer:
    max_epochs: 50
    gpus: 1
    precision: 32
    deterministic: True

  loss:
    strategy: "penalty"  # Use penalty approach
    dummy_class_penalty: 2.2   # Higher penalty for misclassification
    ce_seen_weight: 1.0
    dummy_loss_weight: 1.0
    use_dummy_class: True

  calibration:
    method: "temperature_scaling"

  run_test_after_train: True
  run_custom_evaluation_after_train: True

seed: 42
outputs_root_dir: "outputs"
data_root_dir: "data/processed"

# Experiment identifier
experiment_name: "gtsrb_penalty_6u_with_neck"
